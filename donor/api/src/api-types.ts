/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    '/donations': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List donation history for the authenticated user
         * @description Returns the donation history for the logged-in user. Results are scoped to the caller
         *     based on the Auth0 `sub` claim. Supports simple pagination.
         */
        get: operations['listDonations'];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/donations/create-payment-intent': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a donation payment intent
         * @description Creates a new donation record and returns its identifier. The underlying payment
         *     processor may be mocked for demo purposes.
         */
        post: operations['createPaymentIntent'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    '/suggestions': {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Submit a partner suggestion
         * @description Submits a suggestion for a new supplier, community, or logistics partner.
         */
        post: operations['createSuggestion'];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Error: {
            error: string;
            message?: string;
        };
        /** @enum {string} */
        DonationStatus: 'pending' | 'succeeded' | 'failed';
        Donation: {
            /** @example 42 */
            id: number;
            /**
             * @description Public donation identifier or UUID
             * @example dn_01J5H2S9G0YQ1Z
             */
            donation_id?: string;
            /**
             * Format: float
             * @example 50
             */
            amount: number;
            /** @example USD */
            currency: string;
            status: components['schemas']['DonationStatus'];
            /** Format: date-time */
            created_at: string;
            testimonial?: string | null;
        };
        CreatePaymentIntentRequest: {
            /**
             * Format: float
             * @description Donation amount in dollars
             * @example 25
             */
            amount: number;
            /**
             * @description ISO currency code
             * @default USD
             */
            currency: string;
            /** @description Optional donor message */
            testimonial?: string;
        };
        CreatePaymentIntentResponse: {
            /** @example 123 */
            id: number;
        };
        /** @enum {string} */
        SuggestionType: 'supplier' | 'community' | 'logistics';
        SuggestionCreateRequest: {
            type: components['schemas']['SuggestionType'];
            /** @example Local Bakery */
            name: string;
            /** @example 456 Oak Ave */
            address: string;
        };
        SuggestionCreateResponse: {
            /** @example 77 */
            id: number;
        };
    };
    responses: {
        /** @description Unauthorized */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                'application/json': components['schemas']['Error'];
            };
        };
        /** @description Forbidden */
        Forbidden: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                'application/json': components['schemas']['Error'];
            };
        };
        /** @description Bad Request */
        BadRequest: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                'application/json': components['schemas']['Error'];
            };
        };
        /** @description Server error */
        ServerError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                'application/json': components['schemas']['Error'];
            };
        };
    };
    parameters: {
        /** @description Page number (1-based) */
        PageParam: number;
        /** @description Page size (default 20) */
        PerPageParam: number;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listDonations: {
        parameters: {
            query?: {
                /** @description Page number (1-based) */
                page?: components['parameters']['PageParam'];
                /** @description Page size (default 20) */
                per_page?: components['parameters']['PerPageParam'];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description A list of donations */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['Donation'][];
                };
            };
            401: components['responses']['Unauthorized'];
            403: components['responses']['Forbidden'];
            '5XX': components['responses']['ServerError'];
        };
    };
    createPaymentIntent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['CreatePaymentIntentRequest'];
            };
        };
        responses: {
            /** @description Payment intent created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['CreatePaymentIntentResponse'];
                };
            };
            400: components['responses']['BadRequest'];
            401: components['responses']['Unauthorized'];
            403: components['responses']['Forbidden'];
            '5XX': components['responses']['ServerError'];
        };
    };
    createSuggestion: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                'application/json': components['schemas']['SuggestionCreateRequest'];
            };
        };
        responses: {
            /** @description Suggestion created */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    'application/json': components['schemas']['SuggestionCreateResponse'];
                };
            };
            400: components['responses']['BadRequest'];
            401: components['responses']['Unauthorized'];
            403: components['responses']['Forbidden'];
            '5XX': components['responses']['ServerError'];
        };
    };
}
